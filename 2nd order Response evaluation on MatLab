% Define system parameters
omega_n = 10;  % Natural frequency (rad/s)
T = 0.1;       % Sampling time (seconds)

% Define range of zeta values
zeta_values = [0.1, 0.5, 0.7, 1.0]; % Underdamped to critically damped

% Define range of K values
K_values = [1, 2, 5]; 

% Loop over zeta and K
figure;
for zeta = zeta_values
    for K = K_values
        % Analog transfer function (s-domain)
        num_s = K * omega_n^2; 
        den_s = [1, 2*zeta*omega_n, omega_n^2];
        Gs = tf(num_s, den_s);

        % Digital transfer function (z-domain)
        Gz = c2d(Gs, T, 'tustin'); % Tustin method

        % Step Response: Analog
        [y_s, t_s] = step(Gs, 0:T:5); % Continuous response
        [y_z, t_z] = step(Gz, 0:T:5); % Discrete response

        % Plot time-domain responses
        subplot(2, 2, 1);
        plot(t_s, y_s, 'DisplayName', sprintf('\\zeta = %.1f, K = %.1f (s)', zeta, K));
        hold on;
        title('Analog Step Response');
        xlabel('Time (s)'); ylabel('Amplitude');
        legend;

        subplot(2, 2, 2);
        stem(t_z, y_z, 'DisplayName', sprintf('\\zeta = %.1f, K = %.1f (z)', zeta, K));
        hold on;
        title('Digital Step Response');
        xlabel('Sample'); ylabel('Amplitude');
        legend;

        % Pole-Zero Map: Analog
        subplot(2, 2, 3);
        pzmap(Gs);
        hold on;
        title('Analog Pole-Zero Map');

        % Pole-Zero Map: Digital
        subplot(2, 2, 4);
        pzmap(Gz);
        hold on;
        title('Digital Pole-Zero Map');
    end
end
